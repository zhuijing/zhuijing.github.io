(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{300:function(t,s,a){t.exports=a.p+"assets/img/202012220944.c4356bea.png"},301:function(t,s,a){t.exports=a.p+"assets/img/20201222095021.213c46f6.png"},302:function(t,s,a){t.exports=a.p+"assets/img/20201222102224.956d2fe8.png"},303:function(t,s,a){t.exports=a.p+"assets/img/20201223105345.da1aaaff.png"},304:function(t,s,a){t.exports=a.p+"assets/img/20201223105425.f92eedcb.png"},305:function(t,s,a){t.exports=a.p+"assets/img/20201223101048.2a650c4e.png"},306:function(t,s,a){t.exports=a.p+"assets/img/20201223101129.23e88035.png"},307:function(t,s,a){t.exports=a.p+"assets/img/20201223105719.7e601d61.png"},308:function(t,s,a){t.exports=a.p+"assets/img/20201223161813.3d0934fe.png"},309:function(t,s,a){t.exports=a.p+"assets/img/20201222105921.d205caf0.png"},310:function(t,s,a){t.exports=a.p+"assets/img/20201223192958.cfe8154c.png"},311:function(t,s,a){t.exports=a.p+"assets/img/20201223201327.49ecd3e7.png"},312:function(t,s,a){t.exports=a.p+"assets/img/20201223201542.bda5ac80.png"},313:function(t,s,a){t.exports=a.p+"assets/img/20201223201858.d0d90611.png"},314:function(t,s,a){t.exports=a.p+"assets/img/20201224100506.0ef93c8d.png"},315:function(t,s,a){t.exports=a.p+"assets/img/20201224100841.cd78d220.png"},316:function(t,s,a){t.exports=a.p+"assets/img/20201224102723.0b72a5e5.png"},317:function(t,s,a){t.exports=a.p+"assets/img/20201224102732.7c68ec9a.png"},426:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"图解算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图解算法"}},[t._v("#")]),t._v(" 图解算法")]),t._v(" "),s("h2",{attrs:{id:"第一章-算法简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章-算法简介"}},[t._v("#")]),t._v(" 第一章 算法简介")]),t._v(" "),s("h3",{attrs:{id:"_1-1引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1引言"}},[t._v("#")]),t._v(" 1.1引言")]),t._v(" "),s("ul",[s("li",[t._v("对数，log 32表示以2为底，32的对数，也就是 几个2相乘是32")])]),t._v(" "),s("h4",{attrs:{id:"_1-1-1性能方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1性能方面"}},[t._v("#")]),t._v(" 1.1.1性能方面")]),t._v(" "),s("h3",{attrs:{id:"_1-2二分查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2二分查找"}},[t._v("#")]),t._v(" 1.2二分查找")]),t._v(" "),s("ul",[s("li",[t._v("必须是有序列表")]),t._v(" "),s("li",[t._v("时间复杂度O(log n)")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" last "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" last"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" last"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    last "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("第")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("位的数字是")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h3",{attrs:{id:"_1-3大o表示法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3大o表示法"}},[t._v("#")]),t._v(" 1.3大O表示法")]),t._v(" "),s("ul",[s("li",[t._v("大O表示法指的并非以秒为单位的速度。大O表示法让你能够比较操作数，它指出了算法运行时间的增速。")])]),t._v(" "),s("h4",{attrs:{id:"_1-3-4-一些常见的大-o-运行时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-一些常见的大-o-运行时间"}},[t._v("#")]),t._v(" 1.3.4 一些常见的大 O 运行时间")]),t._v(" "),s("ul",[s("li",[t._v("O(log n)，也叫对数时间，这样的算法包括二分查找。")]),t._v(" "),s("li",[t._v("O(n)，也叫线性时间，这样的算法包括简单查找。")]),t._v(" "),s("li",[t._v("O(n * log n)，这样的算法包括第4章将介绍的快速排序——一种速度较快的排序算法,最糟糕是 O(n^2)。 合并排序时间复杂度 (n * log n)")]),t._v(" "),s("li",[t._v("O(n2)，这样的算法包括第2章将介绍的选择排序——一种速度较慢的排序算法。")]),t._v(" "),s("li",[t._v("O(n!)，这样的算法包括接下来将介绍的旅行商问题的解决方案——一种非常慢的算法。")])]),t._v(" "),s("h2",{attrs:{id:"第二章-选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-选择排序"}},[t._v("#")]),t._v(" 第二章 选择排序")]),t._v(" "),s("h3",{attrs:{id:"_2-1-内存的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-内存的工作原理"}},[t._v("#")]),t._v(" 2.1 内存的工作原理")]),t._v(" "),s("p",[t._v("需要将数据存储到内存时，你请求计算机提供存储空间，计算机给你一个存储地址。需要存\n储多项数据时，有两种基本方式——数组和链表。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-数组和链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-数组和链表"}},[t._v("#")]),t._v(" 2.2 数组和链表")]),t._v(" "),s("h4",{attrs:{id:"链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),s("ol",[s("li",[t._v("分散内存分配")]),t._v(" "),s("li",[t._v("插入 时间负责度 O(log 1)")]),t._v(" "),s("li",[t._v("查找 时间负责度 O(log n)")]),t._v(" "),s("li",[t._v("删除 时间复杂度 O(log 1)")])]),t._v(" "),s("h4",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("ol",[s("li",[t._v("连续的内存分配")]),t._v(" "),s("li",[t._v("插入 时间负责度 O(log n)")]),t._v(" "),s("li",[t._v("查找 时间负责度 O(log 1)")]),t._v(" "),s("li",[t._v("删除 时间复杂度 O(log n)")])]),t._v(" "),s("h3",{attrs:{id:"_2-3-选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-选择排序"}},[t._v("#")]),t._v(" 2.3 选择排序")]),t._v(" "),s("ol",[s("li",[t._v("时间复杂度 O(log n^2)")])]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ol",[s("li",[t._v("中间插入用链表")]),t._v(" "),s("li",[t._v("删除也用链表")])]),t._v(" "),s("h2",{attrs:{id:"第三章-递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-递归"}},[t._v("#")]),t._v(" 第三章 递归")]),t._v(" "),s("ol",[s("li",[t._v("递归只是让方案更优雅，并没有性能上的优势")]),t._v(" "),s("li",[t._v("有时循环性能会更好")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-基线条件和递归条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-基线条件和递归条件"}},[t._v("#")]),t._v(" 3.2 基线条件和递归条件")]),t._v(" "),s("ol",[s("li",[t._v("基线条件就是啥时候不再调用自己")]),t._v(" "),s("li",[t._v("递归条件就是函数调用自己")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-调用栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-调用栈"}},[t._v("#")]),t._v(" 3.3 调用栈")]),t._v(" "),s("blockquote",[s("p",[t._v("计算机在内部使用被称为调用栈的栈。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"小结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v(" 递归指的是调用自己的函数。\n 每个递归函数都有两个条件：基线条件和递归条件。\n 栈有两种操作：压入和弹出。\n 所有函数调用都进入调用栈。\n 调用栈可能很长，这将占用大量的内存。")]),t._v(" "),s("h2",{attrs:{id:"第四章-快速排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-快速排序"}},[t._v("#")]),t._v(" 第四章 快速排序")]),t._v(" "),s("blockquote",[s("p",[t._v("快速排序是一种排序算法，速度比第2章介绍的选择排序快得多，实属优雅代码的典范。")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-分而治之-divide-and-conquer-d-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-分而治之-divide-and-conquer-d-c"}},[t._v("#")]),t._v(" 4.1 分而治之 （divide and conquer，D&C）")]),t._v(" "),s("p",[t._v("下D&C的工作原理：")]),t._v(" "),s("ol",[s("li",[t._v("找出简单的基线条件；")]),t._v(" "),s("li",[t._v("确定如何缩小问题的规模，使其符合基线条件。")])]),t._v(" "),s("p",[t._v("::: tips\n编写涉及数组的递归函数时，基线条件通常是数组为空或只包含一个元素。陷入困境时，\n请检查基线条件是不是这样的。\n:::")]),t._v(" "),s("h3",{attrs:{id:"_4-2-快速排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-快速排序"}},[t._v("#")]),t._v(" 4.2 快速排序")]),t._v(" "),s("blockquote",[s("p",[t._v("快速排序是一种常用的排序算法，比选择排序快得多，选择基数，最好选择中间元素")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pivot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" less "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greater "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" pivot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      less"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pivot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      greater"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("less"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" pivot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greater"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23324")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23324")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23324")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("h2",{attrs:{id:"第五章-散列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-散列表"}},[t._v("#")]),t._v(" 第五章 散列表")]),t._v(" "),s("blockquote",[s("p",[t._v("最有用的基本数据结构之一")]),t._v(" "),s("p",[t._v("内部机制：实现、冲突和散列函数")]),t._v(" "),s("p",[t._v("js中的对象")])]),t._v(" "),s("h3",{attrs:{id:"_5-1-散列函数-hash-table-也被称为散列映射、映射、字典和关联数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-散列函数-hash-table-也被称为散列映射、映射、字典和关联数组"}},[t._v("#")]),t._v(" 5.1 散列函数( hash table)也被称为散列映射、映射、字典和关联数组")]),t._v(" "),s("blockquote",[s("p",[t._v("散列函数“将输入映射到数字")]),t._v(" "),s("p",[t._v("散列函数( hash table)也被称为散列映射、映射、字典和关联数组")])]),t._v(" "),s("p",[t._v("要求")]),t._v(" "),s("ol",[s("li",[t._v("它必须是一致的")]),t._v(" "),s("li",[t._v("它应将不同的输入映射到不同的数字")])]),t._v(" "),s("p",[t._v("特点")]),t._v(" "),s("ol",[s("li",[t._v("散列函数总是将同样的输入映射到相同的索引")]),t._v(" "),s("li",[t._v("散列函数将不同的输入映射到不同的索引")]),t._v(" "),s("li",[t._v("散列函数知道数组有多大")])]),t._v(" "),s("p",[t._v("大O表示法")]),t._v(" "),s("ol",[s("li",[t._v("查找 O(1)")]),t._v(" "),s("li",[t._v("插入 O(1)")]),t._v(" "),s("li",[t._v("删除 O(1)")])]),t._v(" "),s("p",[t._v("应用")]),t._v(" "),s("ol",[s("li",[t._v("电话本查找")]),t._v(" "),s("li",[t._v("DNS解析")]),t._v(" "),s("li",[t._v("Redis 数据库")])]),t._v(" "),s("h2",{attrs:{id:"第6章-广度优先搜索-breadth-first-search-bfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第6章-广度优先搜索-breadth-first-search-bfs"}},[t._v("#")]),t._v(" 第6章 广度优先搜索 （breadth-first search，BFS）")]),t._v(" "),s("blockquote",[s("p",[t._v("解决最短路径问题的算法被称为广度优先搜索。")])]),t._v(" "),s("ol",[s("li",[t._v("使用新的数据结构图来建立网络模型。")]),t._v(" "),s("li",[t._v("学习广度优先搜索，可以回答 “到X的最短路径是什么“")]),t._v(" "),s("li",[t._v("学习有向图和无向图")]),t._v(" "),s("li",[t._v("学习拓扑排序，这种排序算法指出了节点之间的依赖关系。")]),t._v(" "),s("li",[t._v("时间复杂度为O(V + E)")])]),t._v(" "),s("blockquote",[s("p",[t._v("如果你在你的整个人际关系网中搜索芒果销售商，就意味着你将沿每条边前行（记住，边是\n从一个人到另一个人的箭头或连接），因此运行时间至少为O(边数)。\n你还使用了一个队列，其中包含要检查的每个人。将一个人添加到队列需要的时间是固定的，\n即为O(1)，因此对每个人都这样做需要的总时间为O(人数)。所以，广度优先搜索的运行时间为\nO(人数 + 边数)，这通常写作O(V + E)，其中V为顶点（vertice）数，E为边数。")])]),t._v(" "),s("h3",{attrs:{id:"_6-2-图是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-图是什么"}},[t._v("#")]),t._v(" 6.2 图是什么")]),t._v(" "),s("p",[t._v("图模拟一组连接,图由节点（node）和边（edge）组成。")]),t._v(" "),s("p",[t._v("一个节点可能与众多节点直接相连，这些节点被称为邻居。")]),t._v(" "),s("h3",{attrs:{id:"_6-3-广度优先搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-广度优先搜索"}},[t._v("#")]),t._v(" 6.3 广度优先搜索")]),t._v(" "),s("blockquote",[s("p",[t._v("广度优先搜索是一种用于图的查找算法，可帮助回答两类问题。")])]),t._v(" "),s("ol",[s("li",[t._v("从节点A出发，有前往节点B的路径吗？")]),t._v(" "),s("li",[t._v("从节点A出发，前往节点B的哪条路径最短？")])]),t._v(" "),s("h3",{attrs:{id:"_6-3-2-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-队列"}},[t._v("#")]),t._v(" 6.3.2 队列")]),t._v(" "),s("p",[t._v("特点：先进先出 First In First Out，FIFO（栈后进先出（Last In First Out，LIFO）\n操作：入队和出队")]),t._v(" "),s("h3",{attrs:{id:"_6-4-实现图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-实现图"}},[t._v("#")]),t._v(" 6.4 实现图")]),t._v(" "),s("blockquote",[s("p",[t._v("有向图：有箭头指向的，有方向性的图")]),t._v(" "),s("p",[t._v("无向图：没有箭头指向的，没有方向的")]),t._v(" "),s("p",[t._v("树是一种特殊的图,其中没有往后指的边。")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("通过散列表（js中的对象）实现图")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" graph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"claire"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"anuj"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peggy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peggy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"claire"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"thom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jonny"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"anuj"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peggy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"thom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jonny"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("有没有某人")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("曹")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'佳宇'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'杨欣'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'志凯'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("佳宇")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'武阳'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'妥强'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'志凯'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("志凯")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王维'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("杨欣")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王维'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("王维")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'俊杰'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" searched "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" searching "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tips "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'没找到'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  searching "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searching"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" searching"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      searched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'俊杰'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        tips "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'找到了'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      tu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" searching"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("tu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'曹'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])])]),t._v(" "),s("blockquote",[s("p",[t._v("如果任务A依赖于任务B，在列表中任务A就必须在任务B后面。这被称为拓扑排序，使用它可根据图创建一个有序列表.")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(300),alt:"拓扑排序"}})]),t._v(" "),s("blockquote",[s("p",[t._v("这是一个图，因为它由节点（人）和边组成。其中的边从一个节点指向其父母，但所有的边\n都往下指。在家谱中，往上指的边不合情理！因为你父亲不可能是你祖父的父亲！\n"),s("img",{attrs:{src:a(301),alt:"树"}})])]),t._v(" "),s("h3",{attrs:{id:"小结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[t._v(" 广度优先搜索指出是否有从A到B的路径。")]),t._v(" "),s("li",[t._v(" 如果有，广度优先搜索将找出最短路径。")]),t._v(" "),s("li",[t._v(" 面临类似于寻找最短路径的问题时，可尝试使用图来建立模型，再使用广度优先搜索来\n解决问题。")]),t._v(" "),s("li",[t._v(" 有向图中的边为箭头，箭头的方向指定了关系的方向，例如，rama→adit表示rama欠adit钱。")]),t._v(" "),s("li",[t._v(" 无向图中的边不带箭头，其中的关系是双向的，例如，ross - rachel表示“ross与rachel约\n会，而rachel也与ross约会”。")]),t._v(" "),s("li",[t._v(" 队列是先进先出（FIFO）的。")]),t._v(" "),s("li",[t._v(" 栈是后进先出（LIFO）的。")]),t._v(" "),s("li",[t._v(" 你需要按加入顺序检查搜索列表中的人，否则找到的就不是最短路径，因此搜索列表必\n须是队列。")]),t._v(" "),s("li",[t._v(" 对于检查过的人，务必不要再去检查，否则可能导致无限循环。")])]),t._v(" "),s("h2",{attrs:{id:"第7章-狄克斯特拉算法-dijkstra-s-algorithm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第7章-狄克斯特拉算法-dijkstra-s-algorithm"}},[t._v("#")]),t._v(" 第7章 狄克斯特拉算法 （Dijkstra’s algorithm）")]),t._v(" "),s("p",[t._v("本章内容")]),t._v(" "),s("ol",[s("li",[t._v("介绍加权图——提高或降低某些边的权重")]),t._v(" "),s("li",[t._v("介绍狄克斯特拉算法，让你能够找出加权图中前往X的最短路径。")]),t._v(" "),s("li",[t._v("介绍图中的环，它导致狄克斯特拉算法不管用。")])]),t._v(" "),s("blockquote",[s("p",[t._v("广度优先搜索，它找出的是段数最少的路径（导航去某地 换乘少）。如果你要找出最快的路径，可使用另一种算法——狄克斯特拉\n算法（Dijkstra’s algorithm）（导航去某地 用时少）。")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),s("p",[t._v("不能将狄克斯特拉算法用于包含负权边的图。在包含\n负权边的图中，要找出最短路径，可使用另一种算法——贝尔曼福德算法（Bellman-Ford\nalgorithm）")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),s("p",[t._v("在无向图中，每条边都是一个环。狄克斯特拉算法只适用于有向无环图（directed acyclic")])]),t._v(" "),s("p",[t._v("graph，DAG）。")]),t._v(" "),s("h3",{attrs:{id:"_7-1-使用狄克斯特拉算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-使用狄克斯特拉算法"}},[t._v("#")]),t._v(" 7.1 使用狄克斯特拉算法")]),t._v(" "),s("p",[t._v("问题：找出下列图中，起点到终点耗时最少的路径。其中每个数字表示的都是时间，单位分钟\n"),s("img",{attrs:{src:a(302),alt:"树"}})]),t._v(" "),s("p",[t._v("狄克斯特拉算法包含4个步骤。")]),t._v(" "),s("ol",[s("li",[t._v("找出最便宜的节点，即可在最短时间内前往的节点。")]),t._v(" "),s("li",[t._v("对于该节点的邻居，检查是否有前往它们的更短路径，如果有，就更新其开销。")]),t._v(" "),s("li",[t._v("重复这个过程，直到对图中的每个节点都这样做了。")]),t._v(" "),s("li",[t._v("计算最终路径。")])]),t._v(" "),s("p",[t._v("求双子峰到金门大桥的最短时间")]),t._v(" "),s("p",[s("img",{attrs:{src:a(303),alt:"树"}})]),t._v(" "),s("p",[t._v("求双子峰到金门大桥的最短距离")]),t._v(" "),s("p",[s("img",{attrs:{src:a(304),alt:"树"}})]),t._v(" "),s("h3",{attrs:{id:"_7-2-术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-术语"}},[t._v("#")]),t._v(" 7.2 术语")]),t._v(" "),s("p",[t._v("狄克斯特拉算法用于每条边都有关联数字的图，这些数字称为权重（weight）。\n"),s("img",{attrs:{src:a(305),alt:"树"}})]),t._v(" "),s("p",[t._v("带权重的图称为加权图（weighted graph），不带权重的图称为非加权图（unweighted graph）。\n"),s("img",{attrs:{src:a(306),alt:"树"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("要计算非加权图中的最短路径，可使用广度优先搜索。要计算加权图中的最短路径，可使用狄克斯特拉算法")])]),t._v(" "),s("h3",{attrs:{id:"_7-3-换钢琴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-换钢琴"}},[t._v("#")]),t._v(" 7.3 换钢琴")]),t._v(" "),s("p",[t._v("这个图中的节点是大家愿意拿出来交换的东西，边的权重是交换时需要额外加多少钱。拿海\n报换吉他需要额外加30美元，拿黑胶唱片换吉他需要额外加15美元。Rama需要确定采用哪种路\n径将乐谱换成钢琴时需要支付的额外费用最少。为此，可以使用狄克斯特拉算法！\n"),s("img",{attrs:{src:a(307),alt:"树"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(308),alt:"树"}})]),t._v(" "),s("ol",[s("li",[t._v("由点【乐谱】出发，相邻【唱片】和【海报】两点，将它们放到开销数组中，值分别为 0 和 5。0 小于 5，所以基于【海报】，执行第二步，拿到【乐谱】通过【海报】达到其相邻的点的值，分别是【吉他】30 和【架子鼓】35，此时开销数组里面有四个值：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("父节点")]),t._v(" "),s("th",[t._v("节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("开销")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("海报")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0 （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("唱片")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("海报")]),t._v(" "),s("td",[t._v("吉他")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("30")])]),t._v(" "),s("tr",[s("td",[t._v("海报")]),t._v(" "),s("td",[t._v("架子鼓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("35")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("5<30<35，进行重复操作，以【唱片】为基础，拿到【乐谱】到它相邻的点的值。分别为【吉他】20，【架子鼓】25，都小于开销数组中的值，进行更新。此时的开销数组为：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("父节点")]),t._v(" "),s("th",[t._v("节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("开销")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("海报")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0 （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("唱片")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5     （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("吉他")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("20")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("架子鼓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("25")])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("继续遍历，20 < 25，此时应该基于【吉他】，【吉他】与钢琴相连，【乐谱】通过【唱片】到【吉他】再到【钢琴】，需 40，更新数组。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("父节点")]),t._v(" "),s("th",[t._v("节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("开销")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("海报")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0 （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("唱片")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5     （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("吉他")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("20（已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("架子鼓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("25")])]),t._v(" "),s("tr",[s("td",[t._v("吉他")]),t._v(" "),s("td",[t._v("钢琴")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("40")])])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("25 < 40，再基于【架子鼓】遍历，架子鼓也只和【钢琴】相连，【乐谱】——【唱片】——【架子鼓】——【钢琴】，值为 35，35 小于 40 ，更新。最终只有【钢琴】这一点没遍历，而【钢琴】又是终点，则执行结束啦。最终是：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("父节点")]),t._v(" "),s("th",[t._v("节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("开销")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("海报")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0 （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("乐谱")]),t._v(" "),s("td",[t._v("唱片")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5  （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("吉他")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("20（已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("唱片")]),t._v(" "),s("td",[t._v("架子鼓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("25 （已遍历相邻值）")])]),t._v(" "),s("tr",[s("td",[t._v("架子鼓")]),t._v(" "),s("td",[t._v("钢琴")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("35   （终点，无需遍历）")])])])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("确定最终的路径。当前，我们知道最短路径的开销为35美元，但如何确定这条路径呢？")])]),t._v(" "),s("ul",[s("li",[t._v("先找出钢琴的父节点【架子鼓】。")]),t._v(" "),s("li",[t._v("找到架子鼓的父节点【唱片】")]),t._v(" "),s("li",[t._v("找到唱片的父节点【乐谱】")])]),t._v(" "),s("p",[t._v("所以最终路径是 乐谱 -> 唱片 -> 架子鼓 -> 钢琴")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" graph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("yuepu")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changpain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("haibao")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("haibao")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jita")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gu")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changpain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jita")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gu")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gu")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gangqing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jita")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gangqing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gangqing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" costs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changpain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("haibao")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" parents "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changpain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuepu'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("haibao")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuepu'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问题二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var graph = {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   A: {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     B: 5,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     C: 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   },")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   B: {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     D:4,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     E:2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   },")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   C:{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     B: 8,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     E: 7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   },")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   D: {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     F: 3,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     E: 6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   },")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   E: {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     F:1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   },")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   F: {}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var costs = {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   B: 5,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   C: 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var parents = {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   B: 'A',")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   C: 'A',")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// };")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" processed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在未处理的节点中找出开销最小的节点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_lowest_cost_node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// haibao")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" neighbors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { jita: 30,gu: 35,}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历当前节点的所有邻居")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" neighbors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" new_cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" neighbors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new_cost\n      parents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node   \n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果经当前节点前往该邻居更近，")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" new_cost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 就更新该邻居的开销")]),t._v("\n      costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new_cost\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同时将该邻居的父节点设置为当前节点")]),t._v("\n      parents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node   \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将当前节点标记为处理过")]),t._v("\n  processed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找出接下来要处理的节点，并循环")]),t._v("\n  node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_lowest_cost_node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'graph'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'costs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parents'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'processed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" processed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_lowest_cost_node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("costs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lowest_cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lowest_cost_node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" costs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" lowest_cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("processed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lowest_cost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cost\n      lowest_cost_node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lowest_cost_node\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br"),s("span",{staticClass:"line-number"},[t._v("94")]),s("br"),s("span",{staticClass:"line-number"},[t._v("95")]),s("br"),s("span",{staticClass:"line-number"},[t._v("96")]),s("br"),s("span",{staticClass:"line-number"},[t._v("97")]),s("br"),s("span",{staticClass:"line-number"},[t._v("98")]),s("br"),s("span",{staticClass:"line-number"},[t._v("99")]),s("br"),s("span",{staticClass:"line-number"},[t._v("100")]),s("br"),s("span",{staticClass:"line-number"},[t._v("101")]),s("br"),s("span",{staticClass:"line-number"},[t._v("102")]),s("br"),s("span",{staticClass:"line-number"},[t._v("103")]),s("br"),s("span",{staticClass:"line-number"},[t._v("104")]),s("br"),s("span",{staticClass:"line-number"},[t._v("105")]),s("br"),s("span",{staticClass:"line-number"},[t._v("106")]),s("br"),s("span",{staticClass:"line-number"},[t._v("107")]),s("br"),s("span",{staticClass:"line-number"},[t._v("108")]),s("br"),s("span",{staticClass:"line-number"},[t._v("109")]),s("br")])]),s("h3",{attrs:{id:"_7-5实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5实现"}},[t._v("#")]),t._v(" 7.5实现")]),t._v(" "),s("h2",{attrs:{id:"第八章-贪婪算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章-贪婪算法"}},[t._v("#")]),t._v(" 第八章 贪婪算法")]),t._v(" "),s("p",[t._v("本章内容")]),t._v(" "),s("ol",[s("li",[t._v(" 学习如何处理不可能完成的任务：没有快速算法的问题（NP完全问题）。")]),t._v(" "),s("li",[t._v(" 学习识别NP完全问题，以免浪费时间去寻找解决它们的快速算法。")]),t._v(" "),s("li",[t._v(" 学习近似算法，使用它们可快速找到NP完全问题的近似解。")]),t._v(" "),s("li",[t._v(" 学习贪婪策略——一种非常简单的问题解决策略。")])]),t._v(" "),s("h3",{attrs:{id:"_8-1-教室调度问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-教室调度问题"}},[t._v("#")]),t._v(" 8.1 教室调度问题")]),t._v(" "),s("p",[t._v("问题：假设有如下课程表，你希望将尽可能多的课程安排在某间教室上。你没法让这些课都在这间教室上，因为有些课的上课时间有冲突。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(309),alt:"树"}})]),t._v(" "),s("p",[t._v("具体做法如下")]),t._v(" "),s("ol",[s("li",[t._v("选出结束最早的课，它就是要在这间教室上的第一堂课。")]),t._v(" "),s("li",[t._v("接下来，必须选择第一堂课结束后才开始的课。同样，你选择结束最早的课，这将是要\n在这间教室上的第二堂课。")])]),t._v(" "),s("p",[t._v("在这个示例中，每次都选择结束最早的课。用专业术语说，就是你每步都选择局部最优解，最终得到的就是全局最优解。")]),t._v(" "),s("h3",{attrs:{id:"_8-2-背包问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-背包问题"}},[t._v("#")]),t._v(" 8.2 背包问题")]),t._v(" "),s("p",[t._v("问题： 假设你是个贪婪的小偷，背着可装4磅重东西的背包，在商场伺机盗窃各种可装入背包的商品。\n其中 音响3000美元重4磅，笔记本2000美元重3磅，吉他1500美元重1磅。")]),t._v(" "),s("p",[t._v("具体做法如下：")]),t._v(" "),s("ol",[s("li",[t._v("选择最贵的 音响3000美元")]),t._v(" "),s("li",[t._v("选择第二贵的\n最终只获得 3000元。但是如果选择 笔记本2000和吉他1500元，那么最终获得 3500元。")])]),t._v(" "),s("h3",{attrs:{id:"_8-3-集合覆盖问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-集合覆盖问题"}},[t._v("#")]),t._v(" 8.3 集合覆盖问题")]),t._v(" "),s("h3",{attrs:{id:"_8-4-np-完全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-np-完全问题"}},[t._v("#")]),t._v(" 8.4 NP 完全问题")]),t._v(" "),s("h3",{attrs:{id:"_8-5-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-小结"}},[t._v("#")]),t._v(" 8.5 小结")]),t._v(" "),s("ul",[s("li",[t._v(" 贪婪算法寻找局部最优解，企图以这种方式获得全局最优解。")]),t._v(" "),s("li",[t._v(" 对于NP完全问题，还没有找到快速解决方案。")]),t._v(" "),s("li",[t._v(" 面临NP完全问题时，最佳的做法是使用近似算法。")]),t._v(" "),s("li",[t._v(" 贪婪算法易于实现、运行速度快，是不错的近似算法。")])]),t._v(" "),s("h2",{attrs:{id:"第-九-章-动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-九-章-动态规划"}},[t._v("#")]),t._v(" 第 九 章 动态规划")]),t._v(" "),s("p",[t._v("本章内容")]),t._v(" "),s("ul",[s("li",[t._v(" 学习动态规划，这是一种解决棘手问题的方法，它将问题分成小问题，并先着手解决这些小问题。")]),t._v(" "),s("li",[t._v(" 学习如何设计问题的动态规划解决方案。")]),t._v(" "),s("li",[t._v("动态规划算法的工作原理。动态规划先解决子问题，再逐步解决大问题。")])]),t._v(" "),s("h3",{attrs:{id:"_9-1-背包问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-背包问题"}},[t._v("#")]),t._v(" 9.1 背包问题")]),t._v(" "),s("p",[t._v("假设有个小偷，背着一个可装4磅东西的背包。可盗窃的商品有如下3件。音响3000美元重4磅，笔记本2000美元重3磅，吉他1500美元重1磅,iphone 2000美元重1磅\n为了让盗窃的商品价值最高，该选择哪些商品？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("-")]),t._v(" "),s("th",[t._v("1")]),t._v(" "),s("th",[t._v("2")]),t._v(" "),s("th",[t._v("3")]),t._v(" "),s("th",[t._v("4")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("小提琴")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")])]),t._v(" "),s("tr",[s("td",[t._v("音响")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("3000")])]),t._v(" "),s("tr",[s("td",[t._v("笔记本")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("1500")]),t._v(" "),s("td",[t._v("2000")]),t._v(" "),s("td",[t._v("3500")])]),t._v(" "),s("tr",[s("td",[t._v("iphone")]),t._v(" "),s("td",[t._v("2000")]),t._v(" "),s("td",[t._v("3500, 放入了手机和吉他")]),t._v(" "),s("td",[t._v("3500, 放入了手机和吉他")]),t._v(" "),s("td",[t._v("4000， 放入笔记本和iphone")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("最优解可能导致背包")])]),t._v(" "),s("h3",{attrs:{id:"_9-2-5-可以偷商品的一部分吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-5-可以偷商品的一部分吗"}},[t._v("#")]),t._v(" 9.2.5 可以偷商品的一部分吗")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("假设你在杂货店行窃，可偷成袋的扁豆和大米，但如果整袋装不下，可打开包装，再将背包\n倒满。在这种情况下，不再是要么偷要么不偷，而是可偷商品的一部分。如何使用动态规划来处\n理这种情形呢？")]),t._v(" "),s("p",[t._v("答案是没法处理。使用动态规划时，要么考虑拿走整件商品，要么考虑不拿，而没法判断该\n不该拿走商品的一部分。")]),t._v(" "),s("p",[t._v("但使用贪婪算法可轻松地处理这种情况！首先，尽可能多地拿价值最高的商品；如果拿光了，\n再尽可能多地拿价值次高的商品，以此类推。")])]),t._v(" "),s("h3",{attrs:{id:"_9-2-6-旅游行程最优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-6-旅游行程最优化"}},[t._v("#")]),t._v(" 9.2.6 旅游行程最优化")]),t._v(" "),s("p",[t._v("假设你要去伦敦度假，假期2天，但你想去游览的地方很多。你没法前往每个地方游览，因\n此你列个单子")]),t._v(" "),s("p",[s("img",{attrs:{src:a(310),alt:"树"}})]),t._v(" "),s("p",[t._v("对于想去游览的每个名胜，都列出所需的时间以及你有多想去看看。根据这个清单，你能确\n定该去游览哪些名胜吗？")]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),s("p",[t._v("但仅当每个子问题都是离散的，即不依赖于其他子问题时，动态规划才管用")])]),t._v(" "),s("h3",{attrs:{id:"练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),s("p",[t._v("假设你要去野营。你有一个容量为6磅的背包，需要决定该携带下面的哪些东西。其中\n每样东西都有相应的价值，价值越大意味着越重要：")]),t._v(" "),s("ul",[s("li",[t._v(" 水（重3磅，价值10）；")]),t._v(" "),s("li",[t._v(" 书（重1磅，价值3）  食物（重2磅，价值9）；")]),t._v(" "),s("li",[t._v(" 夹克（重2磅，价值5）；")]),t._v(" "),s("li",[t._v(" 相机（重1磅，价值6）。\n请问携带哪些东西时价值最高？")])]),t._v(" "),s("h3",{attrs:{id:"_9-3-最长公共子串-难点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-最长公共子串-难点"}},[t._v("#")]),t._v(" 9.3 最长公共子串（难点）")]),t._v(" "),s("ul",[s("li",[t._v("动态规划可帮助你在给定约束条件下找到最优解。在背包问题中，你必\n须在背包容量给定的情况下，偷到价值最高的商品。")]),t._v(" "),s("li",[t._v("在问题可分解为彼此独立且离散的子问题时，就可使用动态规划来解决。\n要设计出动态规划解决方案可能很难，这正是本节要介绍的。下面是一些通用的小贴士。")]),t._v(" "),s("li",[t._v("每种动态规划解决方案都涉及网格。")]),t._v(" "),s("li",[t._v("单元格中的值通常就是你要优化的值。在前面的背包问题中，单元格的值为商品的价值。")]),t._v(" "),s("li",[t._v("每个单元格都是一个子问题，因此你应考虑如何将问题分成子问题，这有助于你找出网\n格的坐标轴。")])]),t._v(" "),s("h3",{attrs:{id:"_9-3-4-最长公共子序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-4-最长公共子序列"}},[t._v("#")]),t._v(" 9.3.4 最长公共子序列")]),t._v(" "),s("ul",[s("li",[t._v("生物学家根据最长公共序列来确定DNA链的相似性，进而判断度两种动物或疾病有多相\n似。最长公共序列还被用来寻找多发性硬化症治疗方案。")]),t._v(" "),s("li",[t._v("你使用过诸如git diff等命令吗？它们指出两个文件的差异，也是使用动态规划实现的。")]),t._v(" "),s("li",[t._v("前面讨论了字符串的相似程度。编辑距离（levenshtein distance）指出了两个字符串的相\n似程度，也是使用动态规划计算得到的。编辑距离算法的用途很多，从拼写检查到判断\n用户上传的资料是否是盗版，都在其中。")]),t._v(" "),s("li",[t._v("你使用过诸如Microsoft Word等具有断字功能的应用程序吗？它们如何确定在什么地方断\n字以确保行长一致呢？使用动态规划！")])]),t._v(" "),s("h3",{attrs:{id:"小结-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[t._v("需要在给定约束条件下优化某种指标时，动态规划很有用。")]),t._v(" "),s("li",[t._v("问题可分解为离散子问题时，可使用动态规划来解决。")]),t._v(" "),s("li",[t._v("每种动态规划解决方案都涉及网格。")]),t._v(" "),s("li",[t._v("单元格中的值通常就是你要优化的值。")]),t._v(" "),s("li",[t._v("每个单元格都是一个子问题，因此你需要考虑如何将问题分解为子问题。")]),t._v(" "),s("li",[t._v("没有放之四海皆准的计算动态规划解决方案的公式。")])]),t._v(" "),s("h2",{attrs:{id:"第-10-章-k最近邻算法-k-nearest-neighbours-knn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-10-章-k最近邻算法-k-nearest-neighbours-knn"}},[t._v("#")]),t._v(" 第 10 章 K最近邻算法 (k-nearest neighbours，KNN)")]),t._v(" "),s("p",[t._v("本章内容")]),t._v(" "),s("ul",[s("li",[t._v("学习使用K最近邻算法创建分类系统。")]),t._v(" "),s("li",[t._v("学习特征抽取。")]),t._v(" "),s("li",[t._v("学习回归，即预测数值，如明天的股价或用户对某部电影的喜欢程度。")]),t._v(" "),s("li",[t._v("学习K最近邻算法的应用案例和局限性。")])]),t._v(" "),s("h3",{attrs:{id:"_10-1-橙子还是柚子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-橙子还是柚子"}},[t._v("#")]),t._v(" 10.1 橙子还是柚子")]),t._v(" "),s("h3",{attrs:{id:"_10-2-创建推荐系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-创建推荐系统"}},[t._v("#")]),t._v(" 10.2 创建推荐系统")]),t._v(" "),s("p",[t._v("假设你是Netflix，要为用户创建一个电影推荐系统。\n你可以将所有用户都放入一个图表中,这些用户在图表中的位置取决于其喜好，因此喜好相似的用户距离较近。\n但还有一个重要的问题没有解决。，相似的用户相距较近，但如何确定两位用户的相似程度呢？")]),t._v(" "),s("h3",{attrs:{id:"_10-2-1-特征抽取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-1-特征抽取"}},[t._v("#")]),t._v(" 10.2.1 特征抽取")]),t._v(" "),s("p",[t._v("假设 橙子A的个头为 2，红的程度为2。柚子B的个头为2，红的程度为1。未知水果C 的个头为4，红的程度为4。\n根据这些特征绘图。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(311),alt:"树"}})]),t._v(" "),s("p",[t._v("从上图可知，水果A和B比较像。下面来度量它们有多像。要计算两点的距离，可使用毕达哥拉斯公式。例如，A和B的距离如下。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(312),alt:"树"}})]),t._v(" "),s("p",[t._v("五维空间中的距离\n"),s("img",{attrs:{src:a(313),alt:"树"}})]),t._v(" "),s("h3",{attrs:{id:"_10-2-2-回归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-2-回归"}},[t._v("#")]),t._v(" 10.2.2 回归")]),t._v(" "),s("p",[t._v("假设你要预测Priyanka会给电影Pitch Perfect打多少分。Justin、JC、Joey、Lance和Chris都给\n它分别打了 5，4，4，5，3分，")]),t._v(" "),s("p",[t._v("你求这些人打的分的平均值，结果为4.2。这就是回归（regression）。你将使用KNN来做两项\n基本工作——分类和回归：")]),t._v(" "),s("ul",[s("li",[t._v("分类就是编组；")]),t._v(" "),s("li",[t._v("回归就是预测结果（如一个数字）")])]),t._v(" "),s("p",[t._v("回归很有用。假设你在伯克利开个小小的面包店，每天都做新鲜面包，需要根据如下一组特\n征预测当天该烤多少条面包：")]),t._v(" "),s("ul",[s("li",[t._v("天气指数1～5（1表示天气很糟，5表示天气非常好）；")]),t._v(" "),s("li",[t._v("是不是周末或节假日（周末或节假日为1，否则为0）；")]),t._v(" "),s("li",[t._v("有没有活动（1表示有，0表示没有）。")])]),t._v(" "),s("p",[t._v("已有数据 A(5,1,0) = 300, B(3,1,1) = 225, C(1,1,0) = 75,D(4,0,1) = 200,E(4,0,0) = 150 F(2,0,0) = 50")]),t._v(" "),s("p",[t._v("今天是周末，天气不错,根据这些数据，预测你今天能售出多少条面包呢？我们来使用KNN\n算法，其中的K为4。首先，找出与今天最接近的4个邻居。今天（4，1，0） = ？")]),t._v(" "),s("p",[t._v("距离如下")]),t._v(" "),s("ul",[s("li",[t._v("今天 - A 1")]),t._v(" "),s("li",[t._v("今天 - B 2")]),t._v(" "),s("li",[t._v("今天 - C 9")]),t._v(" "),s("li",[t._v("今天 - D 2")]),t._v(" "),s("li",[t._v("今天 - E 1")]),t._v(" "),s("li",[t._v("今天 - F 5")])]),t._v(" "),s("p",[t._v("将A，B，D，E （300 + 225 + 200+150）/ 4 = 218.75 这些天售出的面包数平均，结果为218.75。这就是你今天要烤的面包数！")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("余弦相似度")]),t._v(" "),s("p",[t._v("前面计算两位用户的距离时，使用的都是距离公式。还有更合适的公式吗？在实际工作中，\n经常使用余弦相似度（cosine similarity）。假设有两位品味类似的用户，但其中一位打分时更\n保守。他们都很喜欢Manmohan Desai的电影Amar Akbar Anthony，但Paul给了5星，而Rowan只 给4星。如果你使用距离公式，这两位用户可能不是邻居，虽然他们的品味非常接近。")]),t._v(" "),s("p",[t._v("余弦相似度不计算两个矢量的距离，而比较它们的角度，因此更适合处理前面所说的情况。\n本书不讨论余弦相似度，但如果你要使用KNN，就一定要研究研究它！")])]),t._v(" "),s("h3",{attrs:{id:"_10-3-机器学习简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-机器学习简介"}},[t._v("#")]),t._v(" 10.3 机器学习简介")]),t._v(" "),s("p",[t._v("KNN算法真的是很有用，堪称你进入神奇的机器学习领域的\n领路人！机器学习旨在让计算机更聪明")]),t._v(" "),s("h3",{attrs:{id:"_10-3-1-ocr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-1-ocr"}},[t._v("#")]),t._v(" 10.3.1 OCR")]),t._v(" "),s("p",[t._v("OCR指的是光学字符识别（optical character recognition），这意味着你可拍摄印刷页面的照片，\n计算机将自动识别出其中的文字")]),t._v(" "),s("p",[t._v("OCR的第一步是查看大量的数字图像并提取特征，这被称为训练（training）。大多数机器学\n习算法都包含训练的步骤：要让计算机完成任务，必须先训练它")]),t._v(" "),s("h3",{attrs:{id:"_10-3-2-创建垃圾邮件过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-2-创建垃圾邮件过滤器"}},[t._v("#")]),t._v(" 10.3.2 创建垃圾邮件过滤器")]),t._v(" "),s("p",[t._v("垃圾邮件过滤器使用一种简单算法——朴素贝叶斯分类器（Naive Bayes classifier），你首先\n需要使用一些数据对这个分类器进行训练。")]),t._v(" "),s("h3",{attrs:{id:"_10-4-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-小结"}},[t._v("#")]),t._v(" 10.4 小结")]),t._v(" "),s("ul",[s("li",[t._v(" KNN用于分类和回归，需要考虑最近的邻居。")]),t._v(" "),s("li",[t._v(" 分类就是编组。")]),t._v(" "),s("li",[t._v(" 回归就是预测结果（如数字）。")]),t._v(" "),s("li",[t._v(" 特征抽取意味着将物品（如水果或用户）转换为一系列可比较的数字。")]),t._v(" "),s("li",[t._v(" 能否挑选合适的特征事关KNN算法的成败。")])]),t._v(" "),s("h2",{attrs:{id:"第-11-章-10种算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-11-章-10种算法"}},[t._v("#")]),t._v(" 第 11 章 10种算法")]),t._v(" "),s("h3",{attrs:{id:"_11-1-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-树"}},[t._v("#")]),t._v(" 11.1 树")]),t._v(" "),s("p",[t._v("二叉查找树， 对于其中的每个节点，左子节点的值都比它小，而右子节点的值都比它大。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(314),alt:"树"}})]),t._v(" "),s("p",[t._v("假设你要查找Maggie。为此，你首先检查根节点。Maggie排在David的后面，因此你往右边找。Maggie排在Manning前面，因此你往左边找。找到了。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在二叉查找树中查找节点时，平均运行时间为\nO(log n)，但在最糟的情况下所需时间为O(n)；而在有序数组中查找时，即便是在最糟情况下所\n需的时间也只有O(log n)，因此你可能认为有序数组比二叉查找树更佳。然而，二叉查找树的插\n入和删除操作的速度要快得多。")])]),t._v(" "),s("p",[t._v("不平衡的树，这棵树是向右倾斜的，因此性能不佳。也有一些处于平衡状态的特殊二叉查找树，如红黑树。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(315),alt:"树"}})]),t._v(" "),s("p",[t._v("那在什么情况下使用二叉查找树呢？B树是一种特殊的二叉树，数据库常用它来存储数据。\n如果你对数据库或高级数据结构感兴趣，请研究如下数据结构：B树，红黑树，堆，伸展树。")]),t._v(" "),s("h3",{attrs:{id:"_11-2-反向索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-反向索引"}},[t._v("#")]),t._v(" 11.2 反向索引")]),t._v(" "),s("p",[t._v("这是一种很有用的数据结构：一个散列表，将单词映射到包含它的页面。这种数据结构被称为反向索引（inverted index），常用于创\n建搜索引擎。")]),t._v(" "),s("h3",{attrs:{id:"_11-3-傅里叶变换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-傅里叶变换"}},[t._v("#")]),t._v(" 11.3 傅里叶变换")]),t._v(" "),s("p",[t._v("傅里叶变换算是一个绝妙、优雅且应用广泛的算法。")]),t._v(" "),s("p",[t._v("给定一首歌曲，傅里叶变换能够将其中的各种频率分离出来。")]),t._v(" "),s("p",[t._v("如果能够将歌曲分解为不同的频率，就可强化你关心的部分，如强化低音并隐藏高音。")]),t._v(" "),s("p",[t._v("傅里叶变换非常适合用于处理信号，可使用它来压缩音乐。为此，首先需要将音频文件分解为音符。傅里叶变换能够准确地指出各个音符对整个歌曲的\n贡献，让你能够将不重要的音符删除。这就是MP3格式的工作原理！")]),t._v(" "),s("p",[t._v("数字信号并非只有音乐一种类型。JPG也是一种压缩格式，也采用了刚才说的工作原理。")]),t._v(" "),s("p",[t._v("傅里叶变换还被用来地震预测和DNA分析。")]),t._v(" "),s("p",[t._v("使用傅里叶变换可创建类似于Shazam这样的音乐识别软件。")]),t._v(" "),s("h3",{attrs:{id:"_11-4-并行算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-并行算法"}},[t._v("#")]),t._v(" 11.4 并行算法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("并行性管理开销。假设你要对一个包含1000个元素的数组进行排序，如何在两个内核之\n间分配这项任务呢？如果让每个内核对其中500个元素进行排序，再将两个排好序的数组\n合并成一个有序数组，那么合并也是需要时间的。")])]),t._v(" "),s("li",[s("p",[t._v("负载均衡。假设你需要完成10个任务，因此你给每个内核都分配5个任务。但分配给内核\nA的任务都很容易，10秒钟就完成了，而分配给内核B的任务都很难，1分钟才完成。这意\n味着有那么50秒，内核B在忙死忙活，而内核A却闲得很！你如何均匀地分配工作，让两\n个内核都一样忙呢？")])])]),t._v(" "),s("h3",{attrs:{id:"_11-5-mapreduce-分布式算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-mapreduce-分布式算法"}},[t._v("#")]),t._v(" 11.5 MapReduce 分布式算法")]),t._v(" "),s("p",[t._v("分布式算法非常适合用于在短时间内完成海量工作， MapReduce基于两个简单的理念：映射（map）函数和归并（reduce）函数。")]),t._v(" "),s("h3",{attrs:{id:"_11-5-2-映射函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-2-映射函数"}},[t._v("#")]),t._v(" 11.5.2 映射函数")]),t._v(" "),s("p",[t._v("映射函数很简单，它接受一个数组，并对其中的每个元素执行同样的处理。例如，下面的映\n射函数将数组的每个元素翻倍。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_11-5-3-归并函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-3-归并函数"}},[t._v("#")]),t._v(" 11.5.3 归并函数")]),t._v(" "),s("p",[t._v("归并函数可能令人迷惑，其理念是将很多项归并为一项。映射是将一个数组转换为另一个数组。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("currentIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("映射\n"),s("img",{attrs:{src:a(316),alt:"树"}})]),t._v(" "),s("p",[t._v("归并\n"),s("img",{attrs:{src:a(317),alt:"树"}})]),t._v(" "),s("h3",{attrs:{id:"_11-6-布隆过滤器和-hyperloglog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-6-布隆过滤器和-hyperloglog"}},[t._v("#")]),t._v(" 11.6 布隆过滤器和 HyperLogLog")]),t._v(" "),s("p",[t._v("布隆过滤器是一种概率型数据结构，它提供的答案有可能不对，但很可能是正确的。")]),t._v(" "),s("p",[t._v("HyperLogLog近似地计算集合中不同的元素数，与布隆过滤器一样，它不能给出准确的答案，\n但也八九不离十，而占用的内存空间却少得多。")]),t._v(" "),s("p",[t._v("面临海量数据且只要求答案八九不离十时，可考虑使用概率型算法！")]),t._v(" "),s("h3",{attrs:{id:"_11-7-sha-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-7-sha-算法"}},[t._v("#")]),t._v(" 11.7 SHA 算法")]),t._v(" "),s("p",[t._v("安全散列算法（secure hash algorithm，SHA）函数。给定一个字符串，SHA返回其散列值。")]),t._v(" "),s("p",[t._v("SHA是一个散列函数，它生成一个散列值——一个较短的字符串。\n用于创建散列表的散列函数根据字符串生成数组索引，而SHA根据字符串生成另一个字符串。\n对于每个不同的字符串，SHA生成的散列值都不同。")]),t._v(" "),s("p",[t._v("你可使用SHA来判断两个文件是否相同，这在比较超大型文件时很有用。假设你有一个4 GB\n的文件，并要检查朋友是否也有这个大型文件。为此，你不用通过电子邮件将这个大型文件发送\n给朋友，而可计算它们的SHA散列值，再对结果进行比较。")]),t._v(" "),s("p",[t._v("SHA被广泛用于计算密码的散列值。这种散列算法是单向的。你可根据字符串计算出散列值。但你无法根据散列值推断出原始字符串。")]),t._v(" "),s("p",[t._v("SHA实际上是一系列算法：SHA-0、SHA-1、SHA-2和SHA-3。请使用SHA-2或SHA-3。\n当前，最安全的密码散列函数是bcrypt，但没有任何东西是万无一失的。")]),t._v(" "),s("h3",{attrs:{id:"_11-8-局部敏感的散列算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-8-局部敏感的散列算法"}},[t._v("#")]),t._v(" 11.8 局部敏感的散列算法")]),t._v(" "),s("p",[t._v("希望散列函数是局部敏感的。在这种情况下，可使用Simhash。\n如果你对字符串做细微的修改，Simhash生成的散列值也只存在细微的差别。这让你能够通过比\n较散列值来判断两个字符串的相似程度，这很有用！")]),t._v(" "),s("ul",[s("li",[t._v("Google使用Simhash来判断网页是否已搜集。")]),t._v(" "),s("li",[t._v("老师可以使用Simhash来判断学生的论文是否是从网上抄的。")]),t._v(" "),s("li",[t._v("Scribd允许用户上传文档或图书，以便与人分享，但不希望用户上传有版权的内容！这个\n网站可使用Simhash来检查上传的内容是否与小说《哈利·波特》类似，如果类似，就自动拒绝。")]),t._v(" "),s("li",[t._v("需要检查两项内容的相似程度时，Simhash很有用。")])]),t._v(" "),s("h3",{attrs:{id:"_11-9-diffie-hellman-密钥交换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-9-diffie-hellman-密钥交换"}},[t._v("#")]),t._v(" 11.9 Diffie-Hellman 密钥交换")]),t._v(" "),s("ul",[s("li",[t._v("双方无需知道加密算法。")])]),t._v(" "),s("p",[t._v("Diffie-Hellman使用两个密钥：公钥和私钥。顾名思义，公钥就是公开的，可将其发布到网站\n上，通过电子邮件发送给朋友，或使用其他任何方式来发布。你不必将它藏着掖着。有人要向你\n发送消息时，他使用公钥对其进行加密。加密后的消息只有使用私钥才能解密。只要只有你知道\n私钥，就只有你才能解密消息！")]),t._v(" "),s("p",[t._v("Diffie-Hellman算法及其替代者RSA依然被广泛使用。")]),t._v(" "),s("h3",{attrs:{id:"_11-10-线性规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-10-线性规划"}},[t._v("#")]),t._v(" 11.10 线性规划")]),t._v(" "),s("p",[t._v("线性规划用于在给定约束条件下最大限度地改善指定的指标。例如，假设你所在的公司生产\n两种产品：衬衫和手提袋。衬衫每件利润2美元，需要消耗1米布料和5粒扣子；手提袋每个利润3\n美元，需要消耗2米布料和2粒扣子。你有11米布料和20粒扣子，为最大限度地提高利润，该生产\n多少件衬衫、多少个手提袋呢？")]),t._v(" "),s("p",[t._v("目标是利润最大化，而约束条件是拥有的原材料数量。")]),t._v(" "),s("p",[t._v("所有的图算法都可使用线性规划来实现。线性规划是一个宽泛得多的框架，图问题只是其中的一个子集。")]),t._v(" "),s("p",[t._v("线性规划使用Simplex算法，这个算法很复杂")])])}),[],!1,null,null,null);s.default=r.exports}}]);