(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{607:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"高阶组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件"}},[t._v("#")]),t._v(" 高阶组件")]),t._v(" "),a("p",[t._v("高阶组件（HOC）是 React 中用于复用组件逻辑的一种高级技巧。HOC 自身不是 React API 的一部分，它是一种基于 React 的组合特性而形成的设计模式。")]),t._v(" "),a("p",[t._v("具体而言，"),a("strong",[t._v("高阶组件是参数为组件，返回值为新组件的函数")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EnhancedComponent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("higherOrderComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WrappedComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("组件是将 props 转换为 UI，而高阶组件是将组件转换为另一个组件。")]),t._v(" "),a("p",[t._v("HOC 在 React 的第三方库中很常见，例如 Redux 的 connect 和 Relay 的 createFragmentContainer。")]),t._v(" "),a("p",[t._v("在本文档中，我们将讨论为什么高阶组件有用，以及如何编写自己的 HOC 函数。")]),t._v(" "),a("h2",{attrs:{id:"使用-hoc-解决横切关注点问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-hoc-解决横切关注点问题"}},[t._v("#")]),t._v(" 使用 HOC 解决横切关注点问题")])])}),[],!1,null,null,null);a.default=n.exports}}]);